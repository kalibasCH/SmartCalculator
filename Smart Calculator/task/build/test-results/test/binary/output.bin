[1;31m
Start test 1[0m
> /help
CIt means that from now on the program must receive the addition + 
Tand subtraction - operators as an input to distinguish operations from each other. 
ZIt must support both unary and binary minus operators. Moreover, If the user has entered 
Lseveral same operators following each other, the program still should work 
X(like Java or Python REPL). Also, as you remember from school math, two adjacent minus 
[signs turn into a plus. Therefore, if the user inputs --, it should be read as +; if they 
Yinput ----, it should be read as ++, and so on. The smart calculator ought to have such 
a feature.
> 
> /exit
Bye!
[1;31m
Start test 2[0m
> 7 + 1 + 4
12
> 23 - 17 - 4
2
> 23 - 17 - 13
-7
> -9 - 4 - 21
-34
*> 33 + 21 + 11 + 49 - 32 - 9 + 1 - 80 + 4
-2
> 101
101
> -302
-302
> 
> 10 - 7 - 3
0
> /exit
Bye!
[1;31m
Start test 3[0m

> 8 --- 3
5
	> 8 -- 3
11
> 32 ++++++++++++++ 4
36
> 5 --- 2 ++++++ 4 -- 2 ---- 1
10
> /exit
Bye!
